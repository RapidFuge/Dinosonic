import { Hono } from 'hono';
const restRoutes = new Hono();

// Opensubsonic (subsonic) api endpoints.
import ping from './ping.ts';
import getLicense from './getLicense.ts';
import getOpenSubsonicExtensions from './getOpenSubsonicExtensions.ts';
import download from './download.ts';
import getLyrics from './getLyrics.ts';
import search from './search.ts';
import getSong from './getSong.ts';
import getAlbum from './getAlbum.ts';
import getArtist from './getArtist.ts';
import getArtists from './getArtists.ts';
import getCoverArt from './getCoverArt.ts';
import getTopSongs from './getTopSongs.ts';
import getArtistInfo from './getArtistInfo.ts';
import stream from './stream.ts';
import getLyricsBySongId from './getLyricsBySongId.ts';
import getAlbumList from './getAlbumList.ts';
import getAlbumInfo from './getAlbumInfo.ts';
import getMusicFolders from './getMusicFolders.ts';
import getMusicDirectory from './getMusicDirectory.ts';
import getIndexes from './getIndexes.ts';
import getRandomSongs from './getRandomSongs.ts';
import getGenres from './getGenres.ts';
import getSongsByGenre from './getSongsByGenre.ts';
import scrobble from './scrobble.ts';
import getNowPlaying from './getNowPlaying.ts';
import getSimilarSongs from './getSimilarSongs.ts';
import startScan from './startScan.ts';
import getScanStatus from './getScanStatus.ts';

restRoutes.route('/', ping);
restRoutes.route('/', getLicense);
restRoutes.route('/', getMusicFolders);
restRoutes.route('/', getMusicDirectory);
restRoutes.route('/', getOpenSubsonicExtensions);
restRoutes.route('/', download);
restRoutes.route('/', getLyrics);
restRoutes.route('/', search);
restRoutes.route('/', getSong);
restRoutes.route('/', getAlbum);
restRoutes.route('/', getArtist);
restRoutes.route('/', getArtists);
restRoutes.route('/', getCoverArt);
restRoutes.route('/', getTopSongs);
restRoutes.route('/', getArtistInfo);
restRoutes.route('/', stream);
restRoutes.route('/', getLyricsBySongId);
restRoutes.route('/', getAlbumList);
restRoutes.route('/', getAlbumInfo);
restRoutes.route('/', getIndexes);
restRoutes.route('/', getRandomSongs);
restRoutes.route('/', getGenres);
restRoutes.route('/', getSongsByGenre);
restRoutes.route('/', scrobble);
restRoutes.route('/', getNowPlaying);
restRoutes.route('/', getSimilarSongs);
restRoutes.route('/', startScan);
restRoutes.route('/', getScanStatus);

export default restRoutes;
